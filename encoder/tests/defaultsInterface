Verifies defaults from structs (interfaces) work

- Primitives are inlined
- Named types use references to the respective default value

-- cue  --
package cuetsy

AType: "foo" | "bar" | *"baz" @cuetsy(kind="type")

Foo: {
  Bar: string | *"ohai"
  Baz: int | *4
  C: AType
} @cuetsy(kind="interface")

NestedFoo: {
  Bar: string | *"ohai"
  Foo: {
    Bar: string | *"ohai"
    Baz: int
  }
} @cuetsy(kind="interface")

-- ts  --
export type AType = 'foo' | 'bar' | 'baz';
export const aTypeDefault: AType = 'baz'
export interface Foo {
  Bar: string;
  Baz: number;
  C: AType;
}
export const fooDefault: Foo = {
  Bar: 'ohai',
  Baz: 4,
  C: aTypeDefault,
}
export interface NestedFoo {
  Bar: string;
  Foo: {
    Bar: string;
    Baz: number;
  };
}
export const nestedFooDefault: NestedFoo = {
  Bar: 'ohai',
}