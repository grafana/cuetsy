-- cue.mod/module.cue --
module: "example.com"

-- one.cue --
package test

import "example.com/dep"

LocalEnum: "foo" | "bar" | "baz" @cuetsy(kind="enum")
LocalEnumD: *"foo" | "bar" | "baz" @cuetsy(kind="enum")
LocalEnumNumeric: 1 | 2 | 3 @cuetsy(kind="enum", memberNames="One|Two|Three")
LocalEnumNumericD: *1 | 2 | 3 @cuetsy(kind="enum", memberNames="One|Two|Three")

Compose: {
    localstr: LocalEnum | *"baz"
    localstrd: LocalEnumD
    localnum: LocalEnumNumeric | *2
    localnumd: LocalEnumNumericD
    impstr: dep.DepEnum | *"bar"
    impstrd: dep.DepEnumD
    impnum: dep.DepEnumNumeric | *3
    impnumd: dep.DepEnumNumericD
} @cuetsy(kind="interface")

ComposeAdd: {
    localstr: LocalEnum | *"otherstr"
    localstrd: LocalEnumD | *"otherstr"
    localnum: LocalEnumNumeric | *4
    localnumd: LocalEnumNumericD | *4
    impstr: dep.DepEnum | *"otherstr"
    impstrd: dep.DepEnumD | *"otherstr"
    impnum: dep.DepEnumNumeric | *4
    impnumd: dep.DepEnumNumericD | *4
} @cuetsy(kind="interface")

-- dep/file.cue --
package dep

DepEnum: "foo" | "bar" | "baz" @cuetsy(kind="enum")
DepEnumD: *"foo" | "bar" | "baz" @cuetsy(kind="enum")
DepEnumNumeric: 1 | 2 | 3 @cuetsy(kind="enum", memberNames="One|Two|Three")
DepEnumNumericD: *1 | 2 | 3 @cuetsy(kind="enum", memberNames="One|Two|Three")

-- out/gen --

export enum LocalEnum {
  Bar = 'bar',
  Baz = 'baz',
  Foo = 'foo',
}

export enum LocalEnumD {
  Bar = 'bar',
  Baz = 'baz',
  Foo = 'foo',
}

export const defaultLocalEnumD: LocalEnumD = LocalEnumD.Foo;

export enum LocalEnumNumeric {
  One = 1,
  Three = 3,
  Two = 2,
}

export enum LocalEnumNumericD {
  One = 1,
  Three = 3,
  Two = 2,
}

export const defaultLocalEnumNumericD: LocalEnumNumericD = LocalEnumNumericD.One;

export interface Compose {
  impnum: dep.DepEnumNumeric
  impnumd: dep.DepEnumNumericD
  impstr: dep.DepEnum
  impstrd: dep.DepEnumD
  localnum: LocalEnumNumeric
  localnumd: LocalEnumNumericD
  localstr: LocalEnum
  localstrd: LocalEnumD
}

export const defaultCompose: Compose = {
  impnum: dep.DepEnumNumeric.Two
  impnumd: dep.DepEnumNumericD.One // Probably fine to reference the exported default, too
  impstr: dep.DepEnum.Bar
  impstrd: dep.DepEnum.Foo // Probably fine to reference the exported default, too
  localnum: LocalEnumNumeric.Two
  localnumd: LocalEnumNumeric.One // Probably fine to reference the exported default, too
  localstr: LocalEnum.Baz
  localstrd: LocalEnum.Foo // Probably fine to reference the exported default, too
};

export interface ComposeAdd {
  impnum: dep.DepEnumNumeric | 4
  impnumd: dep.DepEnumNumericD | 4
  impstr: dep.DepEnum | 'otherstr'
  impstrd: dep.DepEnumD | 'otherstr'
  localnum: LocalEnumNumeric | 4
  localnumd: LocalEnumNumericD | 4
  localstr: LocalEnum | 'otherstr'
  localstrd: LocalEnumD | 'otherstr'
}

export const defaultComposeAdd: ComposeAdd = {
  impnum: 4,
  impnumd: 4,
  impstr: 'otherstr',
  impstrd: 'otherstr',
  localnum: 4,
  localnumd: 4,
  localstr: 'otherstr',
  localstrd: 'otherstr',
};